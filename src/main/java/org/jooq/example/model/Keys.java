/*
 * This file is generated by jOOQ.
 */
package org.jooq.example.model;


import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.example.model.tables.Addresses;
import org.jooq.example.model.tables.Clients;
import org.jooq.example.model.tables.FlywaySchemaHistory;
import org.jooq.example.model.tables.Phones;
import org.jooq.example.model.tables.records.AddressesRecord;
import org.jooq.example.model.tables.records.ClientsRecord;
import org.jooq.example.model.tables.records.FlywaySchemaHistoryRecord;
import org.jooq.example.model.tables.records.PhonesRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AddressesRecord> ADDRESSES_PKEY = Internal.createUniqueKey(Addresses.ADDRESSES, DSL.name("addresses_pkey"), new TableField[] { Addresses.ADDRESSES.ID }, true);
    public static final UniqueKey<ClientsRecord> CLIENTS_PKEY = Internal.createUniqueKey(Clients.CLIENTS, DSL.name("clients_pkey"), new TableField[] { Clients.CLIENTS.ID }, true);
    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<PhonesRecord> PHONES_PKEY = Internal.createUniqueKey(Phones.PHONES, DSL.name("phones_pkey"), new TableField[] { Phones.PHONES.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ClientsRecord, AddressesRecord> CLIENTS__CLIENTS_ADDRESS_ID_FKEY = Internal.createForeignKey(Clients.CLIENTS, DSL.name("clients_address_id_fkey"), new TableField[] { Clients.CLIENTS.ADDRESS_ID }, Keys.ADDRESSES_PKEY, new TableField[] { Addresses.ADDRESSES.ID }, true);
    public static final ForeignKey<PhonesRecord, ClientsRecord> PHONES__PHONES_CLIENT_ID_FKEY = Internal.createForeignKey(Phones.PHONES, DSL.name("phones_client_id_fkey"), new TableField[] { Phones.PHONES.CLIENT_ID }, Keys.CLIENTS_PKEY, new TableField[] { Clients.CLIENTS.ID }, true);
}
